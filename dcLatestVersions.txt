Schema plugin dcLatestVersions

_define.php (used once)
	declarations
		name (may be changed)7
		version (may be changed)?
		dccore: 2.16
		settings: 'pref' => '#user-favorites.dclatestversions'
		urls: in construction
_install.php (used once)
	install
		dc_min: '2.16' (@ignore?)
		module_id: 'dcLatestVersions' (plugin name + namespace + Workspace: may be changed? ! => _define.php)
		module_config = array settings	(to do: ?send to settings class?)

_prepend.php (read after objects'creation of the , but before the display - on the front and in the administration)
		load classes utils & setting
		constants PLUGIN_NAME, WORKSPACE, USER_ACTIVE, USER_SHOW + DEBUG
				? NAMESPACE, SETTING_NAME, ?

_admin.php (admin interface)
	load widget.php if exists (@ignore?)
	use constant PLUGIN_NAME in:
		$_menu['Plugins']->addItem
		->addBehavior (s)
	not in class name !
	** class dcLatestVersionsAdmin (static properties & methods)
		properties
			workspace	= WORKSPACE		//public static
			active		= USER_ACTIVE	//public static
			show 		= USER_SHOW		//public static
		methods
			getActive($core)	//private ? //used by adminDashboardOptionsForm
				get workspace
				get active
				get user_prefs->addWorkspace(workspace)
				return workspace->active
			getShow($core)		//private ? used by adminDashboardOptionsForm
				get workspace//
				get show
				get user_prefs->addWorkspace(workspace)
				return workspace->show
			adminDashboardFavorites($core, $favs)
				set class = __CLASS__
				use PLUGIN_NAME
				todo !!!!!
					            'active_cb'    => [$class, 'adminDashboardFavoritesActive']
											Favorites selection.
											Parameters
												$request	string Requested page
												$params	array Requested parameters
											References $params.

								'dashboard_cb' => [$class, 'adminDashboardFavoritesCallback']
											Favorites hack.
											This updates maintenance fav icon text if there are tasks required maintenance.
											Parameters
												$core	dcCore dcCore instance
												$fav	arrayObject fav attributes 
			adminDashboardOptionsForm($core)
				form user preferences
					workspace	=	self::$workspace;
					form_id		=	'form-' .$workspace;
					active_id	=	$workspace .'_active';
					show_id		=	$workspace .'_dashboard';
				addWorkspace
				echo <div class fieldset id form_id
					 <h4> __('Dotclear latests versions')
					<p> <label for active_id										//for ?
						form::checkbox( active_id, 1, self::getActive($core)
						__('Activate Dotclear latest versions.')
					<p> <label for show_id											//for ?
						form::checkbox( show_id, 1, self::getShow($core)
						__('Show Dotclear\'s latest versions on dashboard.')


class.dclatestversionsutils.php
	** class dcLatestVersionsUtils //tools
		simpleArrayToHTMLTable(array $array, string $caption='', $hidden = true, $preserve = false)	//public static
		Return array only 2 dimensions in an HTML table
			array			<b>array</b>
			caption			<b>string</b>		--caption content, defautempty
			hiddencaption	<b>boolean</b>		--hidden caption,	defaut = true
			preserve		<b>boolean</b>		-- preserve string data format, defaut = false, -- true = no html::escapeHTML action, ex show <a href... in html table
			return  $table			<b>string</b>

		arrayToHTMLTable($array, string $caption='', bool $hiddencaption = true, bool $preserve = false)	//public static
		return array in an HTML table
			array			<b>array/object</b>
			caption			<b>string</b>		--caption content, defautempty
			hiddencaption	<b>boolean</b>		--hidden caption,	defaut = true
			preserve		<b>boolean</b>		-- preserve string data format, defaut = false, -- true = no html::escapeHTML action, ex show <a href... in html table
			return  $table	<b>string</b>		-- html table

		printR($value, $title ='', $show = false )	//public static
		Return print_r code or Dc msg
			value			<b>mixed</b> 	-- value to print_r
			title			<b>string</b> 	-- title data name to show, default empty
			show			<b>boolean</b> 	-- result or in dotclear message?, default false -- not in dc msg
			return  message		<b>string</b>	-- print_r or Dotclear msg notice
				use Global $core
			note: may be modifiy with only message return ?

class.dclatestversions.settings.php
	** class dcLatestVersionsSettings
		protected properties
			debug (bool)
			builds 				['stable', 'unstable', 'testing', 'sexy']		//clone setting
			setting_config 		['builds', "List of Dotclear's builds"]	/clone builds (_install.php)
			plugin_name			PLUGIN_NAME
			plugin_title		'Dotclear latest versions' //?class/_admin.php ?
			plugin_namespace	PLUGIN_NAME (??? other constant ?)
			plugin_setting		'builds'	(??? other constant ?)
			user_workspace		WORKSPACE;
			user_active			USER_ACTIVE;
			user_show			USER_SHOW;

		methods
			__init($datas) //public (@ignore?)
				set debug, 
				datas	<b>array</b>	'debug =>boolean', 
			active()
				use: core, workspace, user_active
				return pref setting active
			show()
				use: core, workspace, user_show
				return pref setting user_show
			setting()
				use: core, plugin_namespace, plugin_setting
				return setting
			builds()
				return builds
			name()
				return plugin_name
			title()
				return plugin_title
			versions()
				return formated array of DcVersions update (& infos)
				get setting via setting() method
					builds = explode ',' setting
				foreach(builds
					#instance
						updater = new dcUpdate()
						updater->getVersion()
						set href
						extract (., p, r)
						set	date, year, month
						set	hour, minut (
						checkdate(month , day , year )
				return [version, update, url, upload, php (version),(url) info]
			setters
			-------
			setSetting()		//private
				use setting() mthod
				implode(, builds
				if setting != builds
					use core, setting_config, plugin_namespace, plugin_setting
						drop setting
						recompose setting
				return setting
index.php  (interface admin)
	dcPage::check(admin)	//@ignore ? //double if !defined('DC_CONTEXT_ADMIN') return
	set index_tab, default_tab //multipart (if debug part)
	instance new dcLatestVersionsSettings(core) //core is'nt asked (no __construct method), may in future ?
	get plugin_title	= object->title();
	set plugin_description	= core->plugins->getModules(PLUGIN_NAME)['desc']
	define PLUGIN_URL $p_url (@ignore ? not used ?)
	set index_title		__(Plugin user parameters)
	set index_comment	sprintf __(plugin %s configuration), __(plugin_title)
		get object builds()
		get setting()
		compare ===> replace with a method who get return off setSetting() method
	get active() (user pref)
		set active_status user_active ?__(activated) :__(deactivated)
	get show() (user pref)
		set show_status user_show ?__(shown) :__(not displayed)
	get versions()
		?same DC_VERSION / DC_UPDATE_VERSION ?false -> core->error->add ?true addSuccessNotice //<- this show in a <p>dc message ?
	--
	<html>
	<head>
		<title>PLUGIN_NAME
		<!-- #onglets -->
		echo dcPage::jsPageTabs $default_tab
	<body>
		dcPage::breadcrumb( html::escapeHTML(core->blog->name), PLUGIN_NAME
		dcPage::notices()
		<div multipart
			echo index_comment
			printf __(your current %s status), __(preferences))
			printf(__(Plugin activation status : %s), active_status
			printf(__(Show on dashboard status : %s), show_status
				echo sprintf(














